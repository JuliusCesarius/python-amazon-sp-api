name: CI

on:
  push:
    branches:
      - master

jobs:
  versioning:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Increment version
        uses: saleweaver/version_increment_action@v1
        with:
          file_path: "sp_api/__version__.py"
          version_key: "__version__"

      - name: Install Dependencies
        if: env.new_version != ''
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Get Latest Bump Version Commits
        if: env.new_version != ''
        id: get_commits
        run: |
          # Get the last two commits that start with "Bump version"
          COMMITS=$(git log --grep='^Bump version' --pretty=format:"%H" -n 2 | tr '\n' ' ')
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT

      - name: Generate Diff
        if: env.new_version != ''
        id: generate_diff
        run: |
          COMMITS="${{ steps.get_commits.outputs.commits }}"
          COMMITS_ARRAY=($COMMITS)
          if [ ${#COMMITS_ARRAY[@]} -lt 2 ]; then
            echo "No previous Bump version commit found. Skipping changelog."
            echo "diff=" >> $GITHUB_OUTPUT
            exit 0
          fi
      
          OLD_COMMIT=${COMMITS_ARRAY[1]}
          NEW_COMMIT=${COMMITS_ARRAY[0]}
          git diff $OLD_COMMIT $NEW_COMMIT > changelog_diff.patch
          DIFF_CONTENT=$(<changelog_diff.patch)
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Changelog Entry
        if: steps.generate_diff.outputs.diff != '' && env.new_version != ''
        id: generate_changelog
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "${{ steps.generate_diff.outputs.diff }}" > diff.txt
          python generate_changelog.py diff.txt > changelog_entry.md

      - name: Update CHANGELOG.md
        if: steps.generate_diff.outputs.diff != '' && env.new_version != ''
        run: |
          echo "## v${{ env.new_version }} - $(date +'%Y-%m-%d')" >> CHANGELOG.md
          cat changelog_entry.md >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG.md for v${{ env.new_version }}"
          git push


#      - name: Create a new GitHub release
#        if: env.new_version != ''
#        uses: actions/create-release@v1
#        with:
#          tag_name: "v${{ env.new_version }}"
#          release_name: "v${{ env.new_version }}"
#          draft: false
#          prerelease: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Trigger release workflow
#        if: env.new_version != ''
#        run: |
#          curl -X POST \
#          -H "Accept: application/vnd.github.v3+json" \
#          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#          https://api.github.com/repos/${{ github.repository }}/dispatches \
#          -d '{"event_type": "release_created", "client_payload": { "version": "${{ env.new_version }}" }}'
